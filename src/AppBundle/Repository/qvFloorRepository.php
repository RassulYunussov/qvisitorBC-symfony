<?php

use AppBundle\Entity\qvBuilding;

namespace AppBundle\Repository;

/**
 * qvFloorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class qvFloorRepository extends \Doctrine\ORM\EntityRepository
{
	public function findBuildByFloor($id)
	{
        return $this->getEntityManager()
        ->createQuery(
          'SELECT bld.id from AppBundle:qvFloor fl LEFT JOIN fl.building bld 
         	 WHERE fl.id = :id'
            )->setParameter('id', $id)->getResult();
    }
    
    public function countFloorInBuild($build){
     	return $this->getEntityManager()
     	->createQuery(
    		'SELECT COUNT(fl) FROM AppBundle:qvFloor fl 
    			WHERE fl.building = :name'
			)->setParameter('name', $build)->getSingleScalarResult();
      }

    public function findFloorsByBuild($qvBuilding){
    	return $this->getEntityManager()
    	->createQuery(
            'SELECT fl,s from AppBundle:qvFloor fl
    			LEFT JOIN fl.sectors s
            WHERE fl.building = :building'
            )->setParameter('building', $qvBuilding)->getResult();
    }

     public function findSectorByFloor($qvFloor){
      return $this->getEntityManager()
      ->createQuery(
            'SELECT sector from AppBundle:qvSector sector 
            WHERE sector.floor = :name'
            )->setParameter('name', $qvFloor)->getResult();
    }

     public function findByBuildingId($buildingId){
      return $this->getEntityManager()
        ->createQuery("SELECT c from AppBundle:qvFloor c LEFT JOIN c.building b where b.id = :bId"
          )->setParameter("bId", $buildingId)->getArrayResult();
  }
}
